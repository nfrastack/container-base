# SPDX-FileCopyrightText: Â© 2025 Nfrastack <code@nfrastack.com>
#
# SPDX-License-Identifier: MIT

CRON_ASSETS=" \
                    /container/base/defaults/scheduling/cron \
                    /container/base/functions/scheduling/cron \
                "

dependencies() {
    case "$(container_info distro)" in
        alpine )
            CRON_BINARY=$(/usr/sbin/crond)
        ;;
        debian )
        ;;
    esac
}

install() {
    set -e
    if [ ! -f "${CRON_BINARY}" ] || var_true "${CONTAINER_MODULE_REINSTALL}" ; then
        dependencies
        if [ -d "$(dirname "$0")"/rootfs ]; then
            cp -aR "$(dirname "$0")"/rootfs/* /
        fi

        echo "$(TZ=$TIMEZONE date +'%Y-%m-%d %H:%M:%S %Z') | ADD: cron $(busybox | head -n1 | awk '{print $1" "$2}') | repositories" >> /container/build/"${IMAGE_NAME/\//_}"/build.log
        echo "$(TZ=$TIMEZONE date +'%Y-%m-%d %H:%M:%S %Z') | ADD: cron $(busybox | head -n1 | awk '{print $1" "$2}') | repositories" >> /container/build/build.log
    fi
}

remove() {
    if [ -f "${CRON_BINARY}" ]; then
        dependencies

        rm -rf "${CRON_ASSETS}"

        echo "$(TZ=$TIMEZONE date +'%Y-%m-%d %H:%M:%S %Z') | REMOVE: logrotate" >> /container/build/"${IMAGE_NAME/\//_}"/build.log
        echo "$(TZ=$TIMEZONE date +'%Y-%m-%d %H:%M:%S %Z') | REMOVE: logrotate" >> /container/build/build.log

    fi
}

source /container/base/functions/container/build
set -e
$@