build_assets() {
    case "${1,,}" in
        clean )
            rm -rf /build-assets/
        ;;
        scripts)
            # build_assets scripts <path>
            # Executes scripts in order from path. Default path '/build-assets/scripts'
            local _buildasset_script_path
            _buildasset_script_path=${2:-"/build-assets/scripts/"}
            if [ -d "${_buildasset_script_path}" ]; then
                for _buildscript in "${_buildasset_script_path}"/*.sh ; do
                    echo "** Applying ${_buildscript}"
                    bash "${_buildscript}"
                done
            fi
            if [ -d "/build-assets/src" ] ; then cp -Rp /build-assets/src/* /usr/src/peertube ; fi; \
            if [ -d "/build-assets/scripts" ] ; then for script in /build-assets/scripts/*.sh; do echo "** Applying $script"; bash $script; done && \ ; fi ; \
        ;;
        src )
            # build_assets src <O: orig-path> <dest-path>
            # Copies files from (optional default: /build-assets/src/) source to destination
            local _buildasset_src_path
            local _buildasset_dest_path
            if [ -n "${3}" ] ; then
                _buildasset_dest_path="${3}"
                _buildasset_src_path="${2}"
            else
                if [ -z "${2}" ] ; then
                    echo "No build-asset src destination entered"
                else
                    _buildasset_dest_path="${2}"
                    _buildasset_src_path="/build-assets/src/"
                fi
            fi

            if [ -n "${_buildasset_dest_path}" ] ; then
                if [ -d "${_buildasset_src_path}" ] ; then
                    echo "Copying build assets from ${_buildasset_src_path} to ${_buildasset_dest_path}"
                    cp -aR "${_buildasset_src_path}"/* "${_buildasset_dest_path}"
                fi
            fi
        ;;
    esac
}